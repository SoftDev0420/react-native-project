# import User, Product,OrganizationSubscriptionWhereInput,OrganizationSubscriptionPayload from "./generated/prisma.graphql"
# import ProductSubscriptionWhereInput,ProductSubscriptionPayload from "./generated/prisma.graphql"
# import DealSubscriptionWhereInput,DealSubscriptionPayload from "./generated/prisma.graphql"
# import StageSubscriptionWhereInput,StageSubscriptionPayload from "./generated/prisma.graphql"
# import PersonSubscriptionWhereInput,PersonSubscriptionPayload from "./generated/prisma.graphql"
# import PipelineSubscriptionWhereInput,PipelineSubscriptionPayload from "./generated/prisma.graphql"
# import PictureSubscriptionWhereInput,PictureSubscriptionPayload from "./generated/prisma.graphql"
# import UserSubscriptionWhereInput,UserSubscriptionPayload from "./generated/prisma.graphql"

scalar Upload
 
type File {
  id: ID
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type Query {
  getInfo(file: String!): File
  uploads: [File]
}
type Mutation {
  singleUpload(file: Upload!): File!
  multipleUpload(files: [Upload!]!): [File!]!
}

type AuthPayload {
  token: String!
  user: User!
}
type UserIdPayload {
  id: ID!
}

type Query {
  me: User
  allProducts: [Product!]
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}
